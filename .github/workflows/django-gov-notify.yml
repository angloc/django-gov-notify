name: Django Gov Notify

on: [push]

env:
  poetry-version: 1.1.2

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache Poetry virtual env
      uses: actions/cache@v2
      env:
          cache-name: cache-poetry-virtualenv
      with:
          path: .venv
          key: ${{ runner.os }}-build-${{ env.cache-name }}-python-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
    - name: Run image
      uses: abatilo/actions-poetry@v2.0.0
      with:
        poetry-version: ${{ env.poetry-version }}
    - name: Install Python packages
      run: |
          poetry config virtualenvs.in-project true
          poetry install
    - name: Lint with Black
      run: |
        poetry run black
    - name: Sort imports with isort
      run: |
        poetry run isort -rc
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude .venv
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude .venv

  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        poetry-version: [1.0.10, 1.1.2]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache Poetry virtual env
      uses: actions/cache@v2
      env:
          cache-name: cache-poetry-virtualenv
      with:
          path: .venv
          key: ${{ runner.os }}-build-${{ env.cache-name }}-python-${{ matrix.python-version }}-poetry-${{ matrix.poetry-version }}-${{ hashFiles('pyproject.toml') }}
    - name: Run image
      uses: abatilo/actions-poetry@v2.0.0
      with:
        poetry-version: ${{ matrix.poetry-version }}
    - name: Test
      run: |
        poetry run python runtests.py
